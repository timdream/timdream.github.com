"use strict";const versionHash="b2be993fcb4251a552c67eb1d3281c63".substr(0,6),cacheKey="profile-"+versionHash,fileList="./ assets/45-degree-fabric-dark.png?_=fe52ed assets/academia-sinica.icon.svg?_=1e8c57 assets/academia-sinica.svg?_=afef9b assets/apple.svg?_=8685eb assets/asmcrypto-decipher.min.js?_=fa4ddd assets/asmcrypto.js?_=fa9483 assets/cv.min.css?_=4d3ebc assets/cv.min.js?_=bdfc37 assets/demolab-screenshot.jpg?_=632367 assets/demolab.icon.svg?_=ff4890 assets/demolab.svg?_=18ba76 assets/firefox-os-commit.svg?_=7f4a96 assets/firefox-os-keyboard.png?_=4efcc0 assets/firefox-os.icon.png?_=aca0f2 assets/firefox-os.png?_=19638c assets/firefox.icon.png?_=4bbced assets/firefox.png?_=2e2c47 assets/fonts/merriweather-v21-latin-700.woff2?_=fa534b assets/fonts/merriweather-v21-latin-700.woff?_=ba56ea assets/fonts/merriweather-v21-latin-regular.woff2?_=8276fd assets/fonts/merriweather-v21-latin-regular.woff?_=69f098 assets/jszhuyin-learn.mp4?_=de1cef assets/jszhuyin.svg?_=7eb9dc assets/little-pluses.png?_=3ab494 assets/moztw-gfx-tw-tim.jpg?_=c311b2 assets/moztw-ie8.jpg?_=c2f527 assets/moztw.icon.png?_=2c7809 assets/moztw.png?_=8dcd65 assets/owl-publishing.svg?_=379728 assets/reading-signpost-in-paris-foreground.png?_=42be09 assets/reading-signpost-in-paris-scene.jpg?_=39d0e9 assets/reading-signpost-in-paris.jpg?_=b0f285 assets/script.min.js?_=a550d5 assets/style.min.css?_=66723d assets/tiramisu-icon-64-shadow.png?_=3d869c assets/webcrypto-decipher.min.js?_=14e38d assets/wordcloud-example-noscript.jpg?_=318640 assets/wordcloud.svg?_=958049 cv/ cv/steps.json.aes?_=67f271 cv/timdream-private.pdf.aes?_=605420 cv/timdream.pdf?_=6f941a portfolio/academia-sinica/ portfolio/apple/ portfolio/demolab/ portfolio/firefox-os/ portfolio/firefox/ portfolio/jszhuyin/ portfolio/moztw/ portfolio/owl-publishing/ portfolio/wordcloud/".split(" ").map(s=>new URL(s,self.location).href);self.oninstall=(s=>{s.waitUntil(self.caches.open(cacheKey).then(s=>{const e=[].concat(fileList.filter(s=>s.includes("?_=")).map(e=>caches.match(e).then(s=>s||fetch(e)).then(t=>{if(t.ok||!e.includes("fonts"))return s.put(e,t)})),fileList.filter(s=>!s.includes("?_=")).map(e=>fetch(e+"?_="+versionHash).then(t=>{if(!t.ok)throw new Error("Failed");return s.put(e,t)})));return Promise.all(e)}).then(()=>self.skipWaiting()))}),self.onactivate=(s=>{s.waitUntil(self.caches.keys().then(s=>Promise.all(s.filter(s=>s!==cacheKey&&s.startsWith("profile")).map(s=>caches.delete(s)))))}),self.onfetch=(s=>{-1!==fileList.indexOf(s.request.url)&&s.respondWith(caches.open(cacheKey).then(e=>e.match(s.request)).then(e=>e||fetch(s.request)))});
//# sourceMappingURL=service-worker.min.js.map