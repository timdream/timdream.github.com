"use strict";/*! Hash: 361b16b090c75b59c3a97b703ec553c5 */
const cacheKey="profile",fileList="./ assets/45-degree-fabric-dark.png?_=fe52ed assets/academia-sinica.icon.svg?_=1e8c57 assets/academia-sinica.svg?_=afef9b assets/asmcrypto-decipher.min.js?_=2ca998 assets/asmcrypto.js?_=fa9483 assets/cv.min.css?_=679a41 assets/cv.min.js?_=1da33c assets/demolab-screenshot.jpg?_=632367 assets/demolab.icon.svg?_=ff4890 assets/demolab.svg?_=18ba76 assets/firefox-os-commit.svg?_=7f4a96 assets/firefox-os-keyboard.png?_=4efcc0 assets/firefox-os.icon.png?_=ac06b9 assets/firefox-os.png?_=19638c assets/firefox.icon.png?_=acd200 assets/firefox.png?_=2e2c47 assets/jszhuyin-learn.mp4?_=de1cef assets/jszhuyin.svg?_=7eb9dc assets/little-pluses.png?_=3ab494 assets/moztw-gfx-tw-tim.jpg?_=c311b2 assets/moztw-ie8.jpg?_=c2f527 assets/moztw.icon.png?_=baa4bc assets/moztw.png?_=8dcd65 assets/owl-publishing.svg?_=379728 assets/reading-signpost-in-paris-foreground.png?_=42be09 assets/reading-signpost-in-paris-scene.jpg?_=39d0e9 assets/reading-signpost-in-paris.jpg?_=b0f285 assets/script.min.js?_=b4ded5 assets/style.min.css?_=f28ea6 assets/tiramisu-icon-64-shadow.png?_=3d869c assets/webcrypto-decipher.min.js?_=0d2e9e assets/wordcloud-example-noscript.jpg?_=318640 assets/wordcloud.svg?_=958049 cv/ cv/steps.json.aes?_=22c917 cv/timdream-private.pdf.aes?_=7ed977 cv/timdream.pdf?_=e5bf55 portfolio/academia-sinica/ portfolio/demolab/ portfolio/firefox-os/ portfolio/firefox/ portfolio/jszhuyin/ portfolio/moztw/ portfolio/owl-publishing/ portfolio/wordcloud/".split(" ").map(s=>new URL(s,self.location).href);self.oninstall=(s=>{s.waitUntil(self.caches.open(cacheKey).then(s=>Promise.all([s,s.keys()])).then(([s,e])=>{let a=e.map(s=>s.url);return s.addAll([].concat(fileList).filter(s=>!(s.includes("?_=")&&a.includes(s))))}))}),self.onactivate=(s=>{s.waitUntil(self.caches.open(cacheKey).then(s=>Promise.all([s,s.keys()])).then(([s,e])=>e.filter(s=>!fileList.includes(s.url)).map(e=>s.delete(e))))}),self.onfetch=(s=>{-1!==fileList.indexOf(s.request.url)&&s.respondWith(caches.open(cacheKey).then(e=>e.match(s.request)).then(e=>e||fetch(s.request)))});
//# sourceMappingURL=service-worker.min.js.map